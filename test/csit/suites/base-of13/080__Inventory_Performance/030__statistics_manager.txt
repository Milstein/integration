*** Settings ***
Documentation     Test suite for Statistics Manager
Suite Setup       Create Session   session   http://${CONTROLLER}:8080   auth=${AUTH}   headers=${HEADERS}
Suite Teardown    Delete All Sessions
Library           Collections
Library           ../../../libraries/RequestsLibrary.py
Library           ../../../libraries/Common.py
Variables         ../../../variables/Variables.py

*** Variables ***
${nodeprefix}   openflow:
${key}             portStatistics
${REST_CONTEXT}    /controller/nb/v2/statistics

*** Test Cases ***
get port stats
    [Documentation]    Show port stats and validate result
    [Tags]    get
    ${resp}    Get    session    ${REST_CONTEXT}/${CONTAINER}/port
    Should Be Equal As Strings    ${resp.status_code}    200 
    ${TOPO_TREE_DEPTH}    Convert To Integer  ${TOPO_TREE_DEPTH}
    ${TOPO_TREE_FANOUT}   Convert To Integer  ${TOPO_TREE_FANOUT}
    ${numnodes}     Num Of Nodes    ${TOPO_TREE_DEPTH}    ${TOPO_TREE_FANOUT}
    Should Contain X Times   ${resp.content}    "${nodeprefix}1"      ${TOPO_TREE_FANOUT+2}
    :FOR    ${IND}  IN RANGE    2   ${numnodes+1}
    \   Should Contain X Times   ${resp.content}    "${nodeprefix}${IND}"    ${TOPO_TREE_FANOUT+3}

get flow stats
    [Documentation]    Show flow stats and validate result
    [Tags]    get
    ${resp}    Get    session    ${REST_CONTEXT}/${CONTAINER}/flow
    Should Be Equal As Strings    ${resp.status_code}    200 
    ${TOPO_TREE_DEPTH}    Convert To Integer  ${TOPO_TREE_DEPTH}
    ${TOPO_TREE_FANOUT}   Convert To Integer  ${TOPO_TREE_FANOUT}
    ${numnodes}     Num Of Nodes    ${TOPO_TREE_DEPTH}    ${TOPO_TREE_FANOUT}
    :FOR    ${IND}  IN RANGE    1   ${numnodes+1}
    \   Should Contain    ${resp.content}    "${nodeprefix}${IND}"

get table stats
    [Documentation]    Show flow stats and validate result
    [Tags]    get
    ${resp}    Get    session    ${REST_CONTEXT}/${CONTAINER}/table
    Should Be Equal As Strings    ${resp.status_code}    200 
    ${TOPO_TREE_DEPTH}    Convert To Integer  ${TOPO_TREE_DEPTH}
    ${TOPO_TREE_FANOUT}   Convert To Integer  ${TOPO_TREE_FANOUT}
    ${numnodes}     Num Of Nodes    ${TOPO_TREE_DEPTH}    ${TOPO_TREE_FANOUT}
    :FOR    ${IND}  IN RANGE    1   ${numnodes+1}
    \   Should Contain    ${resp.content}    "${nodeprefix}${IND}"

 
